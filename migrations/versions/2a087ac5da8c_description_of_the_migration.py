"""description of the migration

Revision ID: 2a087ac5da8c
Revises: 0319bf7b9426
Create Date: 2023-11-25 21:53:29.239283

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2a087ac5da8c'
down_revision = '0319bf7b9426'
branch_labels = None
depends_on = None


naming_convention = {
    "ix": 'ix_%(column_0_label)s',
    "uq": "uq_%(table_name)s_%(column_0_name)s",
    "ck": "ck_%(table_name)s_%(column_0_name)s",
    "fk": "fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s",
    "pk": "pk_%(table_name)s"
}

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('exchange_rate', schema=None, naming_convention=naming_convention) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_exchange_rate_crypto'), type_='unique')
        batch_op.create_unique_constraint(batch_op.f('uq_exchange_rate_crypto'), ['crypto', 'fiat'])

    with op.batch_alter_table('payout_destination', schema=None, naming_convention=naming_convention) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_payout_destination_crypto'), type_='unique')
        batch_op.create_unique_constraint(batch_op.f('uq_payout_destination_crypto'), ['crypto', 'addr'])

    with op.batch_alter_table('transaction', schema=None, naming_convention=naming_convention) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_transaction_crypto'), type_='unique')
        batch_op.create_unique_constraint(batch_op.f('uq_transaction_crypto'), ['crypto', 'txid', 'invoice_id'])

    with op.batch_alter_table('user', schema=None, naming_convention=naming_convention) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_user_username'), type_='unique')
        batch_op.create_unique_constraint(batch_op.f('uq_user_username'), ['username'])

    with op.batch_alter_table('wallet', schema=None, naming_convention=naming_convention) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_wallet_crypto'), type_='unique')
        batch_op.create_unique_constraint(batch_op.f('uq_wallet_crypto'), ['crypto'])

    # ### end Alembic commands ###


def downgrade():
    pass
